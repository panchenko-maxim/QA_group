import telebot
from misc import TOKEN
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from classes.user import User
from classes.lobby import Lobby
from classes.weapon import Weapon

# –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ
bot = telebot.TeleBot(TOKEN)
Lobby.lobbies.append(Lobby('–ø–µ—Ä–≤–æ–µ –ª–æ–±–±–∏'))
Lobby.lobbies.append(Lobby('–≤—Ç–æ—Ä–æ–µ –ª–æ–±–±–∏'))

Weapon.add_to_weapons_lst(Weapon('—Å–∞–±–ª—è', 10, 25))
Weapon.add_to_weapons_lst(Weapon('–º–æ—Ç—ã–≥–∞', 12, 19))
Weapon.add_to_weapons_lst(Weapon('–Ω—É–Ω—á–∞–∫–∏', 50, 1))


@bot.message_handler(content_types=['text'])
def text_handler(message):
    user = User.find_user_and_delete_message(message, bot)
    main_menu(user)


@bot.callback_query_handler(lambda message: True)
def inline_button_handler(call):    # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É
    user = User.find_user_from_message(call.message, bot)
    bot.answer_callback_query(call.id)

    if call.data == 'back':
        main_menu(user)

    if 'smile' in call.data:
        smiles = {'smile_happy': 'üòÄ', 'smile_neutral': 'üòê', 'smile_sad': '‚òπ'}
        user.my_smile = smiles[call.data]
        user.help_message = f'—Å–º–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {user.my_smile}'
        account_settings_menu(user)

    if 'weapon' in call.data:
        print(call.data[7:])
        for weapon in Weapon.weapons_lst:
            if call.data[7:] == weapon.name:
                if user.gold >= weapon.gold:
                    user.gold -= weapon.gold
                    user.my_weapon.append(weapon)
                    user.help_message = f'–£–¥–∞—á–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ - <{weapon.name}>!!!'
                    if weapon.name not in user.purchase_history:
                        user.purchase_history[weapon.name] = 0
                    user.purchase_history[weapon.name] += 1
                    main_menu(user)
                else:
                    user.help_message = '–ú–∞–ª–æ –∑–æ–ª–æ—Ç–∞!!!'
                    main_menu(user)

    if '–ª–æ–±–±–∏' in call.data.lower():
        lobby = Lobby.find_lobby(call.data)
        result = lobby.enter(user)

        if result:
            for user in lobby.users:
                lobby_menu(user)
        else:
            user.resend_message('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏, —Ç–∞–∫ –∫–∞–∫ –ª–æ–±–±–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ')


def main_menu(user):
    text = f'---= –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é =---\n' \
           f'{user.help_message}'
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton("–ò–≥—Ä–∞—Ç—å"), KeyboardButton('–ú–∞–≥–∞–∑–∏–Ω'))
    keyboard.row(KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞'))
    # bot.send_message(user.chat_id, text, reply_markup=keyboard)
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, main_handler)


def main_handler(message):
    user = User.find_user_and_delete_message(message, bot)
    text = message.text.lower()
    if '–∏–≥—Ä–∞—Ç—å' in text:
        lobbies_menu(user)
    elif '–º–∞–≥–∞–∑–∏–Ω' in text.lower():
        store_menu(user)
    elif '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞' in text.lower():
        account_settings_menu(user)


def account_settings_menu(user):
    text = '--= –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ =--\n' \
           f'–í–∞—à –Ω–∏–∫–Ω–µ–π–º {user.username}\n' \
           f'–í–∞—à–µ –∑–æ–ª–æ—Ç–æ {user.gold}\n' \
           f'{user.help_message}'
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º'), KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –º–æ–π —Å–º–∞–π–ª'))
    keyboard.row((KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫')))
    keyboard.row(KeyboardButton('–ù–∞–∑–∞–¥'))
    # bot.send_message(user.chat_id, text, reply_markup=keyboard)
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, account_settings_handler)


def account_settings_handler(message):
    user = User.find_user_and_delete_message(message, bot)
    text = message.text.lower()
    if '–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º' in text:
        # bot.send_message(user.chat_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º:')
        user.resend_message('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, new_nickname_handler)
    elif '–∏–∑–º–µ–Ω–∏—Ç—å –º–æ–π —Å–º–∞–π–ª' in text:
        my_smile_menu(user)
    elif '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫' in text:
        purchase_history_menu(user)
    elif '–Ω–∞–∑–∞–¥' in text:
        main_menu(user)


def new_nickname_handler(message):
    user = User.find_user_and_delete_message(message, bot)
    new_nickname = message.text
    if 5 <= len(new_nickname) <= 20 and ' ' not in new_nickname:
        user.username = new_nickname
        # bot.send_message(user.chat_id, '–ù–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω')
        # user.resend_message('–ù–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω')
        user.help_message = '–ù–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω'
        account_settings_menu(user)
    else:
        # bot.send_message(user.chat_id, '–ù–∏–∫–Ω–µ–π–º –Ω–µ –ø—Ä–∏–Ω—è—Ç (–¥–ª–∏–Ω–∞ –∏ –ø—Ä–æ–±–µ–ª—ã)')
        user.help_message = '–ù–∏–∫–Ω–µ–π–º –Ω–µ –ø—Ä–∏–Ω—è—Ç (–¥–ª–∏–Ω–∞ –∏ –ø—Ä–æ–±–µ–ª—ã)'
        account_settings_menu(user)


def store_menu(user):
    keyboard = InlineKeyboardMarkup()
    for weapon in Weapon.weapons_lst:
        keyboard.row(InlineKeyboardButton(weapon.name, callback_data='weapon_' + weapon.name))
    keyboard.row(InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data='back'))
    user.resend_message('--=–ú–∞–≥–∞–∑–∏–Ω=--', keyboard)


def my_smile_menu(user):
    keyboard = InlineKeyboardMarkup()
    keyboard.row(InlineKeyboardButton('–≤–µ—Å–µ–ª—ã–π', callback_data='smile_happy'))
    keyboard.row(InlineKeyboardButton('–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π', callback_data='smile_neutral'))
    keyboard.row(InlineKeyboardButton('–≥—Ä—É—Å—Ç–Ω—ã–π', callback_data='smile_sad'))
    keyboard.row(InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data='back'))
    user.resend_message('--=–í—ã–±–æ—Ä —Å–≤–æ–µ–≥–æ —Å–º–∞–π–ª–∞=--', keyboard)


def purchase_history_menu(user):
    keyboard = InlineKeyboardMarkup()
    text = f'–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏:\n'
    for weapon in user.purchase_history:
        text += f'-{weapon} - {user.purchase_history[weapon]} —à—Ç\n'
    keyboard.row(InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data='back'))
    user.resend_message(text, keyboard)


def lobbies_menu(user):
    keyboard = InlineKeyboardMarkup()
    for lobby in Lobby.lobbies:
        keyboard.row(InlineKeyboardButton(str(lobby), callback_data=lobby.name))
    keyboard.row(InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data='back'))
    user.resend_message('--=–õ–æ–±–±–∏=--', keyboard)


def lobby_menu(main_user):
    text = f'--= –õ–æ–±–±–∏ {main_user.lobby.name}=--\n'
    for user in main_user.lobby.users:
        text += f'- {user.username}\n'
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton('–≤—ã—Ö–æ–¥'))
    main_user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(main_user.chat_id, lobby_menu_handler)


def lobby_menu_handler(message):
    user = User.find_user_and_delete_message(message, bot)
    if message.text == '–≤—ã—Ö–æ–¥':
        user.exit_lobby()
        lobbies_menu(user)


bot.polling()