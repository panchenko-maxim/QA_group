import telebot
from misc import TOKEN
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ
bot = telebot.TeleBot(TOKEN)
users = []

dct_store = [{'–º–µ—á': {'–∑–æ–ª–æ—Ç–æ': 10,
                      '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 2,
                      '—É—Ä–æ–Ω': 10,
                      '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤': 15,
                      '–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å': []}},
             {'—Å–∞–±–ª—è': {'–∑–æ–ª–æ—Ç–æ': 15,
                        '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 5,
                        '—É—Ä–æ–Ω': 15,
                        '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤': 10,
                        '–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å': []}},
             {'–¥—É–±–∏–Ω–∞': {'–∑–æ–ª–æ—Ç–æ': 5,
                         '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 15,
                         '—É—Ä–æ–Ω': 2,
                         '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤': '50',
                         '–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å': []}},
             {'–ª—É–∫': {'–∑–æ–ª–æ—Ç–æ': 25,
                      '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 5,
                      '—É—Ä–æ–Ω': 8,
                      '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤': 30,
                      '–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å': []}},
             {'—Ä–æ–≥–∞—Ç–∫–∞': {'–∑–æ–ª–æ—Ç–æ': 20,
                          '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 30,
                          '—É—Ä–æ–Ω': 5,
                          '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤': 70,
                          '–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å': []}},
             {'–∫–∏—Ä–ø–∏—á': {'–∑–æ–ª–æ—Ç–æ': 8,
                         '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 100,
                         '—É—Ä–æ–Ω': 3,
                         '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤': 45,
                         '–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å': []}},
             ]

dct_menu = {'–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é': ['main menu'],
            '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞': ['account settings', 'üòµ‚Äçüí´'],
            "–∫–æ—Ä–∑–∏–Ω–∞": ['basket'],
            '–≤–∞—à –Ω–∏–∫–Ω–µ–π–º': ['your nickname'],
            '–≤–∞—à–µ –∑–æ–ª–æ—Ç–æ': ['your gold'],
            "–≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã": ["your goods"],
            '–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º': ['enter a new nickname'],
            '–Ω–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω': ['nickname updated'],
            '–Ω–∏–∫–Ω–µ–π–º –Ω–µ –ø—Ä–∏–Ω—è—Ç (–¥–ª–∏–Ω–∞ –∏ –ø—Ä–æ–±–µ–ª—ã)': ['nickname not accepted (length and spaces)'],
            '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é': ['menu setting', '‚ìÇ'],
            '–º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞': ['language selection menu'],
            '–∑–Ω–∞–∫–∏ –≤ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–∏': ['symbols in the title'],
            "–≤–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª—ã": ['enter symbols'],
            "—ç–º–æ–¥–∂–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö": ['emoji on buttons'],
            "–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞": ['enter item number'],
            "–ø–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞": ["purchase successful"],
            "–ø–æ–∫—É–ø–∫–∞ –Ω–µ —É—Å–ø–µ—à–Ω–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ –≤–≤–æ–¥–∞ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞)":
                ["purchase not successful (check the item entry number from the list is correct)"],
            "–ø–æ–∫—É–ø–∫–∞ –Ω–µ —É—Å–ø–µ—à–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ —É –≤–∞—Å –º–∞–ª–æ –∑–æ–ª–æ—Ç–∞ –∏–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç)":
                ["the purchase was not successful (maybe you have little gold or this product is not available)"],
            "–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É": ["added to basket"],
            "—Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ": ["products in basket"],
            "—É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ": ["successfully deleted"],
            "—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫": ["something went wrong"],

            '–∏–≥—Ä–∞—Ç—å': ['game', 'üéÆ'],
            '–º–∞–≥–∞–∑–∏–Ω': ['shop', 'üè™'],
            '–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º': ['change nickname', 'üï¥'],
            '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫': ['button settings', 'üßë‚Äçüîß üéπ'],
            '–Ω–∞–∑–∞–¥': ['back', 'üîô'],
            '–≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –º–µ–Ω—é': ['menu language selection', 'üòù'],
            '–∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞–∫–∏ –≤ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–∏ –º–µ–Ω—é': ['change the characters in the menu table of contents', 'üî£'],
            '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞': ['language setting', 'ü§î'],
            '–∑–Ω–∞–∫–∏ –≤ –Ω–∞—á–∞–ª–µ': ['symbols start', 'üëà'],
            '–∑–Ω–∞–∫–∏ –≤ –∫–æ–Ω—Ü–µ': ['symbols end', 'üëâ'],
            '–≤–∫–ª': ['on', 'üîõ'],
            '–≤—ã–∫–ª': ['off', 'üì¥'],
            '–∫—É–ø–∏—Ç—å': ['buy', 'ü§ë'],
            '–¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É': ['add to basket', 'üóë'],
            '–ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É': ['basket watch', 'üóÑ'],
            '—É–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã': ['remove from basket', 'üôÖ‚Äç‚ôÇ'],

            '–º–µ—á': ['sword'], '—Å–∞–±–ª—è': ['saber'], '–¥—É–±–∏–Ω–∞': ['cudgel'],
            '–ª—É–∫': ['bow'], '—Ä–æ–≥–∞—Ç–∫–∞': ['slingshot'], '–∫–∏—Ä–ø–∏—á': ['brick'],
            '–∑–æ–ª–æ—Ç–æ': ['gold'], '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': ['amount'], '—É—Ä–æ–Ω': ['damage'],
            '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤': ['number of strokes'], '–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å': ['who can own'],

            }


def translate(text, language=None):
    if language == 'EN':
        return dct_menu[text][0].capitalize()
    return text.capitalize()


class User:
    def __init__(self, chat_id, username='new user', gold=100, language='RU',
                 title_symbols_start='-==', title_symbols_end='==-', emoji_on_buttons='–í—ã–∫–ª'):
        self.chat_id = chat_id
        self.username = username
        self.gold = gold
        self.message_id = None  # –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ —é–∑–µ—Ä—É
        self._help_message = ''  # –¥–ª—è –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ç–µ–∫—É—â–µ–º –º–µ–Ω—é( –ª—é–±–æ–º, –≥–¥–µ —ç—Ç–æ –Ω—É–∂–Ω–æ)
        self.language = language
        self.title_symbols_start = title_symbols_start
        self.title_symbols_end = title_symbols_end
        self.emoji_on_buttons = emoji_on_buttons
        self.shopping_basket = []
        self.purchased_goods = []

    def button_with_emoji(self, words):
        if self.emoji_on_buttons in ['On', '–í–∫–ª']:
            return self.text(words) + dct_menu[words][-1]
        return self.text(words)

    def text_with_symbols(self, words):
        return f'{self.title_symbols_start}{self.text(words)}{self.title_symbols_end}'

    def text(self, words):
        return translate(words, self.language)

    def clear_help_message(self):
        self._help_message = ''

    @property
    def help_message(self):
        msg = self._help_message
        self.clear_help_message()
        return msg

    @help_message.setter
    def help_message(self, text):  # obj.help_message = 'klk'
        self._help_message = text

    def try_to_save_my_message(self, message):
        if self.message_id is None:
            self.message_id = message.message_id

    def delete_last_message(self):
        if self.message_id:
            bot.delete_message(self.chat_id, self.message_id)

    def delete_my_message(self, message):
        bot.delete_message(self.chat_id, message.message_id)

    def resend_message(self, text, reply_markup=None):
        self.delete_last_message()
        message = bot.send_message(self.chat_id, text, reply_markup=reply_markup)
        self.message_id = message.message_id

    @classmethod
    def create_user(cls, chat_id):
        user = User(chat_id)
        users.append(user)
        return user

    @classmethod
    def find_user(cls, chat_id) -> 'User':
        for user in users:
            if user.chat_id == chat_id:
                return user

        # –Ω–µ –Ω–∞—à–ª–∏, –Ω—É–∂–Ω–æ –µ–≥–æ —Å–æ–∑–¥–∞—Ç—å
        user = cls.create_user(chat_id)
        return user

    @classmethod
    def find_user_from_message(cls, message):
        return cls.find_user(message.chat.id)

    @classmethod
    def find_user_and_delete_message(cls, message):
        user = cls.find_user_from_message(message)
        user.delete_my_message(message)
        return user


@bot.message_handler(content_types=['text'])
def text_handler(message):
    user = User.find_user_and_delete_message(message)
    main_menu(user)


def main_menu(user):
    text = user.text_with_symbols("–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton(user.button_with_emoji("–∏–≥—Ä–∞—Ç—å")),
                 KeyboardButton(user.button_with_emoji('–º–∞–≥–∞–∑–∏–Ω')))
    keyboard.row(KeyboardButton(user.button_with_emoji('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞')))
    # bot.send_message(user.chat_id, text, reply_markup=keyboard)
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, main_handler)


def main_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if user.text('–∏–≥—Ä–∞—Ç—å') in text:
        pass
    elif user.text('–º–∞–≥–∞–∑–∏–Ω') in text:
        store(user)
    elif user.text('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞') in text:
        account_settings_menu(user)


def store(user):
    text = f'{user.text("–≤–∞—à –Ω–∏–∫–Ω–µ–π–º")}: {user.username}\n' \
           f'{user.text("–≤–∞—à–µ –∑–æ–ª–æ—Ç–æ")}: {user.gold}\n' \
           f'{user.text("–≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã")}: {user.purchased_goods}\n' \
           f'{user.text("—Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ")}: {len(user.shopping_basket)}\n' \
           f'{user.help_message}\n\n' \
           f'{user.text_with_symbols("–º–∞–≥–∞–∑–∏–Ω"):}\n'

    for num, products in enumerate(dct_store, start=1):
        text += f'{num}) - '
        for weapon, properties in products.items():
            text += f'{user.text(weapon)}\n' \
                    f'{user.text("–∑–æ–ª–æ—Ç–æ")}: {properties["–∑–æ–ª–æ—Ç–æ"]}\n' \
                    f'{user.text("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")}: {properties["–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"]}\n' \
                    f'{user.text("—É—Ä–æ–Ω")}: {properties["—É—Ä–æ–Ω"]}\n' \
                    f'{user.text("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤")}: {properties["–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤"]}\n' \
                    f'{user.text("–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å")}: {properties["–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å"]}\n' \
                    f'{"-" * 25}\n'

    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton(user.button_with_emoji('–∫—É–ø–∏—Ç—å')))
    keyboard.row(KeyboardButton(user.button_with_emoji('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É')),
                 user.button_with_emoji('–ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É'))
    keyboard.row(KeyboardButton(user.button_with_emoji('–Ω–∞–∑–∞–¥')))
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, store_handler)


def store_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if user.text('–∫—É–ø–∏—Ç—å') in text:
        user.resend_message(f'{user.text("–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞")}:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, buy_handler)
    elif user.text('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É') in text:
        user.resend_message(f'{user.text("–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞")}:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, add_to_shopping_basket_handler)
    elif user.text('–ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É') in text:
        if len(user.shopping_basket) <= 0:
            user.help_message = '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞'
            store(user)
        else:
            go_to_shopping_basket(user)
    elif user.text('–Ω–∞–∑–∞–¥') in text:
        main_menu(user)


def go_to_shopping_basket(user):
    text = f'{user.text("–≤–∞—à –Ω–∏–∫–Ω–µ–π–º")}: {user.username}\n' \
            f'{user.text("–≤–∞—à–µ –∑–æ–ª–æ—Ç–æ")}: {user.gold}\n' \
            f'{user.text("–≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã")}: {user.purchased_goods}\n' \
            f'{user.text("—Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ")}: {len(user.shopping_basket)}\n' \
            f'{user.help_message}\n\n' \
            f'{user.text_with_symbols("–∫–æ—Ä–∑–∏–Ω–∞"):}\n'

    for num, products in enumerate(user.shopping_basket, start=1):
        text += f'{num}) - '
        for weapon, properties in products.items():
            text += f'{user.text(weapon)}\n' \
                    f'{user.text("–∑–æ–ª–æ—Ç–æ")}: {properties["–∑–æ–ª–æ—Ç–æ"]}\n' \
                    f'{user.text("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")}: {properties["–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"]}\n' \
                    f'{user.text("—É—Ä–æ–Ω")}: {properties["—É—Ä–æ–Ω"]}\n' \
                    f'{user.text("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤")}: {properties["–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞—Ä–æ–≤"]}\n' \
                    f'{user.text("–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å")}: {properties["–∫—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å"]}\n' \
                    f'{"-" * 25}\n'

        keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
        keyboard.row(KeyboardButton(user.button_with_emoji('–∫—É–ø–∏—Ç—å')))
        keyboard.row(KeyboardButton(user.button_with_emoji('—É–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã')))
        keyboard.row(KeyboardButton(user.button_with_emoji('–Ω–∞–∑–∞–¥')))
        user.resend_message(text, keyboard)
        bot.register_next_step_handler_by_chat_id(user.chat_id, go_to_shopping_basket_handler)


def go_to_shopping_basket_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if user.text('–∫—É–ø–∏—Ç—å') in text:
        user.resend_message(f'{user.text("–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞")}:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, buy_from_basket_handler)
    elif user.text('—É–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã') in text:   # –¥–æ–±–∞–≤–ª—è–µ—à—å 1 —Ç–æ–≤–∞—Ä - —Ä–∞–±–æ—Ç–∞—é—Ç –≤—Å–µ –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –±–æ–ª—å—à–µ - –≤—ã–±–∏–≤–∞–µ—Ç –æ—à–∏–±–∫—É api
        user.resend_message(f'{user.text("–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞")}:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, delete_from_basket_handler)
    elif user.text('–Ω–∞–∑–∞–¥') in text:
        main_menu(user)


def delete_from_basket_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text

    if text.isdigit() and 0 < int(text) <= len(user.shopping_basket):
        purchase = user.shopping_basket[int(text) - 1]
        user.shopping_basket.remove(purchase)

        user.help_message = user.text("—É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ")
        store(user)
    else:
        user.help_message = user.text("—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
        store(user)


def add_to_shopping_basket_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if text.isdigit() and 0 < int(text) <= len(dct_store):
        purchase = dct_store[int(text) - 1].copy()
        user.shopping_basket.append(purchase)

        user.help_message = user.text("–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É")
        store(user)
    else:
        user.help_message = user.text("—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
        store(user)


def buy_from_basket_handler(message):
    pass


def buy_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if text.isdigit() and 0 < int(text) <= len(dct_store):
        purchase = dct_store[int(text) - 1]
        for weapon, properties in purchase.items():

            if properties['–∑–æ–ª–æ—Ç–æ'] <= user.gold and properties['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'] > 0:
                properties['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'] -= 1
                user.gold -= properties['–∑–æ–ª–æ—Ç–æ']
                user.purchased_goods.append(purchase)

                user.help_message = user.text("–ø–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞")
                store(user)
            else:
                user.help_message = user.text("–ø–æ–∫—É–ø–∫–∞ –Ω–µ —É—Å–ø–µ—à–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ —É –≤–∞—Å –º–∞–ª–æ –∑–æ–ª–æ—Ç–∞ –∏–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç)")
                store(user)
    else:
        user.help_message = user.text("–ø–æ–∫—É–ø–∫–∞ –Ω–µ —É—Å–ø–µ—à–Ω–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ –≤–≤–æ–¥–∞ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞)")
        store(user)


def account_settings_menu(user):
    text = f'{user.text_with_symbols("–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞")}\n' \
           f'{user.text("–≤–∞—à –Ω–∏–∫–Ω–µ–π–º")}: {user.username}\n' \
           f'{user.text("–≤–∞—à–µ –∑–æ–ª–æ—Ç–æ")}: {user.gold}\n' \
           f'{user.help_message}'
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton(user.button_with_emoji('–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º')))
    keyboard.row(KeyboardButton(user.button_with_emoji('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é')),
                 KeyboardButton(user.button_with_emoji('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫')))
    keyboard.row(KeyboardButton(user.button_with_emoji('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞')))
    keyboard.row(KeyboardButton(user.button_with_emoji('–Ω–∞–∑–∞–¥')))
    # bot.send_message(user.chat_id, text, reply_markup=keyboard)
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, account_settings_handler)


def account_settings_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if user.text('–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º') in text:
        # bot.send_message(user.chat_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º:')
        user.resend_message(f'{user.text("–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º")}:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, new_nickname_handler)
    elif user.text('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é') in text:
        menu_settings(user)
    elif user.text('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫') in text:
        button_settings(user)
    elif user.text('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞') in text:
        menu_language(user)
    elif user.text('–Ω–∞–∑–∞–¥') in text:
        main_menu(user)


def new_nickname_handler(message):
    user = User.find_user_and_delete_message(message)
    new_nickname = message.text
    if 5 <= len(new_nickname) <= 20 and ' ' not in new_nickname:
        user.username = new_nickname
        # bot.send_message(user.chat_id, '–ù–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω')
        # user.resend_message('–ù–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω')
        user.help_message = user.text("–Ω–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω")
        account_settings_menu(user)
    else:
        # bot.send_message(user.chat_id, '–ù–∏–∫–Ω–µ–π–º –Ω–µ –ø—Ä–∏–Ω—è—Ç (–¥–ª–∏–Ω–∞ –∏ –ø—Ä–æ–±–µ–ª—ã)')
        user.help_message = user.text("–Ω–∏–∫–Ω–µ–π–º –Ω–µ –ø—Ä–∏–Ω—è—Ç (–¥–ª–∏–Ω–∞ –∏ –ø—Ä–æ–±–µ–ª—ã)")
        account_settings_menu(user)


def menu_settings(user):
    text = user.text_with_symbols("–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é")
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton(user.button_with_emoji("–∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞–∫–∏ –≤ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–∏ –º–µ–Ω—é")))
    keyboard.row(KeyboardButton(user.button_with_emoji("–Ω–∞–∑–∞–¥")))
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, menu_settings_handler)


def menu_settings_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if user.text("–∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞–∫–∏ –≤ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–∏ –º–µ–Ω—é") in text:
        symbols_in_the_title(user)
    elif user.text("–Ω–∞–∑–∞–¥") in text:
        account_settings_menu(user)


def symbols_in_the_title(user):
    text = f'{user.text_with_symbols("–∑–Ω–∞–∫–∏ –≤ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–∏")}'
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton(user.button_with_emoji('–∑–Ω–∞–∫–∏ –≤ –Ω–∞—á–∞–ª–µ')),
                 KeyboardButton(user.button_with_emoji('–∑–Ω–∞–∫–∏ –≤ –∫–æ–Ω—Ü–µ')))
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, symbols_in_the_title_handler)


def symbols_in_the_title_handler(message):
    user = User.find_user_and_delete_message(message)
    text = message.text
    if user.text('–∑–Ω–∞–∫–∏ –≤ –Ω–∞—á–∞–ª–µ') in text:
        bot.send_message(user.chat_id, f'{user.text("–≤–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª—ã")}:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, symbols_in_the_start_handler)
    elif user.text('–∑–Ω–∞–∫–∏ –≤ –∫–æ–Ω—Ü–µ') in text:
        bot.send_message(user.chat_id, f'{user.text("–≤–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª—ã")}:')
        bot.register_next_step_handler_by_chat_id(user.chat_id, symbols_in_the_end_handler)


def symbols_in_the_start_handler(message):
    user = User.find_user_and_delete_message(message)
    user.title_symbols_start = message.text
    account_settings_menu(user)


def symbols_in_the_end_handler(message):
    user = User.find_user_and_delete_message(message)
    user.title_symbols_end = message.text
    account_settings_menu(user)


def menu_language(user):
    text = user.text_with_symbols("–º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞")
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton('RU'), KeyboardButton('EN'))
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, menu_language_handler)


def menu_language_handler(message):
    user = User.find_user_and_delete_message(message)
    user.language = message.text
    account_settings_menu(user)


def button_settings(user):
    text = user.text_with_symbols("—ç–º–æ–¥–∂–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö")
    keyboard = ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row(KeyboardButton(user.text('–≤–∫–ª')), KeyboardButton(user.text('–≤—ã–∫–ª')))
    user.resend_message(text, keyboard)
    bot.register_next_step_handler_by_chat_id(user.chat_id, button_settings_handler)


def button_settings_handler(message):
    user = User.find_user_and_delete_message(message)
    user.emoji_on_buttons = message.text
    account_settings_menu(user)


bot.polling()
